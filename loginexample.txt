const { Api, TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const readline = require("readline");
const fs = require("fs");
const path = require("path");
require('dotenv').config();

// Create sessions directory if it doesn't exist
const sessionsDir = path.join(__dirname, "../sessions");
if (!fs.existsSync(sessionsDir)) {
  fs.mkdirSync(sessionsDir, { recursive: true });
}

// API credentials - you need to get these from https://my.telegram.org/
const apiId = parseInt(process.env.TELEGRAM_API_ID || "0");
const apiHash = process.env.TELEGRAM_API_HASH || "";

if (!apiId || !apiHash) {
  console.error("Error: TELEGRAM_API_ID and TELEGRAM_API_HASH must be set in .env file");
  console.log("Get your API credentials from https://my.telegram.org/");
  process.exit(1);
}

// Create readline interface for user input
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Function to prompt user for input
function question(text) {
  return new Promise((resolve) => {
    rl.question(text, (answer) => resolve(answer));
  });
}

// Main login function
async function main() {
  console.log("ðŸš€ ShillWave - Telegram Login");
  console.log("============================");
  
  // Get phone number from user
  const phoneNumber = await question("Enter your phone number (international format, e.g. +1234567890): ");
  
  // Create string session
  const stringSession = new StringSession("");
  
  // Create client
  const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
  });
  
  // Start client and connect
  await client.start({
    phoneNumber: phoneNumber,
    password: async () => await question("Please enter your 2FA password (if any): "),
    phoneCode: async () => await question("Please enter the code you received: "),
    onError: (err) => console.log(err),
  });
  
  console.log("âœ… Login successful!");
  
  // Save session string to file
  const sessionString = client.session.save();
  const fileName = `${phoneNumber.replace(/[^0-9]/g, "")}.json`;
  const filePath = path.join(sessionsDir, fileName);
  
  fs.writeFileSync(filePath, JSON.stringify({
    phone: phoneNumber,
    session: sessionString,
    created: new Date().toISOString()
  }));
  
  console.log(`Session saved to: ${filePath}`);
  console.log("You can now use ShillWave to automate your Telegram messaging.");
  
  // Disconnect client
  await client.disconnect();
  rl.close();
}

// Run the main function
main().catch((err) => {
  console.error("Error during login:", err);
  rl.close();
});
